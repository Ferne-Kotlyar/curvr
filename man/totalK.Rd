% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_curvature.R
\name{totalK}
\alias{totalK}
\title{Calculate total curvature from polynomial functions
fitted to landmarked specimens.}
\usage{
totalK(x_range, Momocs_poly, subdiv)
}
\arguments{
\item{x_range}{the lower and upper x-values bounds to
calculate curvature. These are named 'baselines'
in Momocs polynomial objects.}

\item{subdiv}{number of subdivisions made
within \code{x_range}. Curvature is calculated at every
subdivision and summed to compute total curvature.
Default is 1000.}

\item{poly}{a polynomial OpnCoe object (list)
generated by \code{Momocs::npoly()} or
\code{Momocs::opoly()}}
}
\value{
a number: total curvature. Units are
degrees. Divide by arclength for comparisons
between specimens.
}
\description{
Calculates point-wise
curvature along bounded polynomials fitted to curved
specimens. Polynomials are fitted to landmarked
specimens using package \code{Momocs}.
}
\examples{

library(Momocs)

x <- 1:10
y <- x^2

#a fictional landmark dataset
mdat <- matrix(c(x,y), nrow=10, ncol=2)

my_poly <- Momocs::npoly(mdat, 2)

#extract x bounds from Momocs polynomial object
x_range <- c(my_poly$baseline1, my_poly$baseline2)

totalK(x_range, my_poly, 100)

}
